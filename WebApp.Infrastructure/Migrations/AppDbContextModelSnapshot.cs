// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using WebApp.Infrastructure;

#nullable disable

namespace WebApp.Infrastructure.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("WebApp.Core.Models.Common.Image", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<byte[]>("Data")
                        .IsRequired()
                        .HasColumnType("bytea");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Image");
                });

            modelBuilder.Entity("WebApp.Core.Models.Common.Photo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("ImageId")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("ImageId");

                    b.ToTable("Photo");
                });

            modelBuilder.Entity("WebApp.Core.Models.Recipe.Comment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("AuthorId")
                        .HasColumnType("integer");

                    b.Property<int>("Rating")
                        .HasColumnType("integer");

                    b.Property<int>("RecipeId")
                        .HasColumnType("integer");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("AuthorId");

                    b.HasIndex("RecipeId");

                    b.ToTable("Comment");
                });

            modelBuilder.Entity("WebApp.Core.Models.Recipe.Ingredient", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<double>("Count")
                        .HasColumnType("double precision");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("RecipeId")
                        .HasColumnType("integer");

                    b.Property<int>("UnitId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("RecipeId");

                    b.HasIndex("UnitId");

                    b.ToTable("Ingredient");
                });

            modelBuilder.Entity("WebApp.Core.Models.Recipe.Recipe", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("AuthorId")
                        .HasColumnType("integer");

                    b.Property<int>("HeaderPhotoId")
                        .HasColumnType("integer");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("AuthorId");

                    b.HasIndex("HeaderPhotoId");

                    b.ToTable("Recipe");
                });

            modelBuilder.Entity("WebApp.Core.Models.Recipe.Step", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("RecipeId")
                        .HasColumnType("integer");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("RecipeId");

                    b.ToTable("Step");
                });

            modelBuilder.Entity("WebApp.Core.Models.Recipe.Unit", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Unit");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "ks"
                        },
                        new
                        {
                            Id = 2,
                            Name = "g"
                        },
                        new
                        {
                            Id = 3,
                            Name = "kg"
                        },
                        new
                        {
                            Id = 4,
                            Name = "ml"
                        },
                        new
                        {
                            Id = 5,
                            Name = "dl"
                        },
                        new
                        {
                            Id = 6,
                            Name = "l"
                        },
                        new
                        {
                            Id = 7,
                            Name = "balení"
                        },
                        new
                        {
                            Id = 8,
                            Name = "balíček"
                        },
                        new
                        {
                            Id = 9,
                            Name = "hrnek"
                        },
                        new
                        {
                            Id = 10,
                            Name = "hrst"
                        },
                        new
                        {
                            Id = 11,
                            Name = "kalíšek"
                        },
                        new
                        {
                            Id = 12,
                            Name = "kelímek"
                        },
                        new
                        {
                            Id = 13,
                            Name = "kostka"
                        },
                        new
                        {
                            Id = 14,
                            Name = "lahev"
                        },
                        new
                        {
                            Id = 15,
                            Name = "lžička"
                        },
                        new
                        {
                            Id = 16,
                            Name = "lžíce"
                        },
                        new
                        {
                            Id = 17,
                            Name = "miska"
                        },
                        new
                        {
                            Id = 18,
                            Name = "plátek"
                        },
                        new
                        {
                            Id = 19,
                            Name = "plechovka"
                        },
                        new
                        {
                            Id = 20,
                            Name = "sklenice"
                        },
                        new
                        {
                            Id = 21,
                            Name = "snítka"
                        },
                        new
                        {
                            Id = 22,
                            Name = "stroužek"
                        },
                        new
                        {
                            Id = 23,
                            Name = "svazek"
                        },
                        new
                        {
                            Id = 24,
                            Name = "šálek"
                        },
                        new
                        {
                            Id = 25,
                            Name = "špetka"
                        },
                        new
                        {
                            Id = 26,
                            Name = "krajíc"
                        },
                        new
                        {
                            Id = 27,
                            Name = "stonek"
                        });
                });

            modelBuilder.Entity("WebApp.Core.Models.Sys.SysRole", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("SysRole");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Admin"
                        },
                        new
                        {
                            Id = 2,
                            Name = "User"
                        });
                });

            modelBuilder.Entity("WebApp.Core.Models.Sys.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<byte[]>("Salt")
                        .IsRequired()
                        .HasColumnType("bytea");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("User");
                });

            modelBuilder.Entity("WebApp.Core.Models.Sys.UserSysRole", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("SysRoleId")
                        .HasColumnType("integer");

                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("SysRoleId");

                    b.HasIndex("UserId");

                    b.ToTable("UserSysRole");
                });

            modelBuilder.Entity("WebApp.Core.Models.Common.Photo", b =>
                {
                    b.HasOne("WebApp.Core.Models.Common.Image", "Image")
                        .WithMany()
                        .HasForeignKey("ImageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Image");
                });

            modelBuilder.Entity("WebApp.Core.Models.Recipe.Comment", b =>
                {
                    b.HasOne("WebApp.Core.Models.Sys.User", "Author")
                        .WithMany()
                        .HasForeignKey("AuthorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebApp.Core.Models.Recipe.Recipe", "Recipe")
                        .WithMany("Comments")
                        .HasForeignKey("RecipeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Author");

                    b.Navigation("Recipe");
                });

            modelBuilder.Entity("WebApp.Core.Models.Recipe.Ingredient", b =>
                {
                    b.HasOne("WebApp.Core.Models.Recipe.Recipe", "Recipe")
                        .WithMany("Ingredients")
                        .HasForeignKey("RecipeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebApp.Core.Models.Recipe.Unit", "Unit")
                        .WithMany()
                        .HasForeignKey("UnitId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Recipe");

                    b.Navigation("Unit");
                });

            modelBuilder.Entity("WebApp.Core.Models.Recipe.Recipe", b =>
                {
                    b.HasOne("WebApp.Core.Models.Sys.User", "Author")
                        .WithMany()
                        .HasForeignKey("AuthorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebApp.Core.Models.Common.Photo", "HeaderPhoto")
                        .WithMany()
                        .HasForeignKey("HeaderPhotoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Author");

                    b.Navigation("HeaderPhoto");
                });

            modelBuilder.Entity("WebApp.Core.Models.Recipe.Step", b =>
                {
                    b.HasOne("WebApp.Core.Models.Recipe.Recipe", "Recipe")
                        .WithMany("Steps")
                        .HasForeignKey("RecipeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Recipe");
                });

            modelBuilder.Entity("WebApp.Core.Models.Sys.UserSysRole", b =>
                {
                    b.HasOne("WebApp.Core.Models.Sys.SysRole", "SysRole")
                        .WithMany()
                        .HasForeignKey("SysRoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebApp.Core.Models.Sys.User", "User")
                        .WithMany("UserSysRoles")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SysRole");

                    b.Navigation("User");
                });

            modelBuilder.Entity("WebApp.Core.Models.Recipe.Recipe", b =>
                {
                    b.Navigation("Comments");

                    b.Navigation("Ingredients");

                    b.Navigation("Steps");
                });

            modelBuilder.Entity("WebApp.Core.Models.Sys.User", b =>
                {
                    b.Navigation("UserSysRoles");
                });
#pragma warning restore 612, 618
        }
    }
}
